{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\taman\\\\Desktop\\\\Projects\\\\AnemiaProject\\\\client\\\\src\\\\pages\\\\Image.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { Modal, Button } from 'react-bootstrap';\nimport \"../styles/forms.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Image = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [prediction, setPrediction] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    setFile(selectedFile);\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setImagePreview(reader.result);\n    };\n    reader.readAsDataURL(selectedFile);\n  };\n  const navigate = useNavigate();\n  const userValid = () => {\n    let token = localStorage.getItem(\"userdbtoken\");\n    if (token) {\n      console.log(\"user valid\");\n    } else {\n      navigate(\"*\");\n    }\n  };\n  useEffect(() => {\n    userValid();\n  }, []);\n  const handlePredict = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('image', file);\n      const response = await axios.post('http://localhost:5000/dl_predict', formData);\n      setPrediction(response.data.predictionResult);\n      setShowModal(true);\n    } catch (error) {\n      console.error('Error predicting:', error);\n    }\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Deep Learning \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"in\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagePreview,\n          alt: \"Preview\",\n          style: {\n            maxWidth: '100%',\n            maxHeight: '250px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"butn\",\n        onClick: handlePredict,\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), prediction && /*#__PURE__*/_jsxDEV(Modal, {\n        show: showModal,\n        onHide: handleCloseModal,\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Prediction Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: prediction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleCloseModal,\n            style: {\n              backgroundColor: '#e45a5a',\n              color: '#fff',\n              border: 'none',\n              borderRadius: '5px',\n              padding: '10px 20px',\n              cursor: 'pointer',\n              transition: 'background-color 0.3s'\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Image, \"iKt9IhuhW6depVwWdb5vapJk1f8=\", false, function () {\n  return [useNavigate];\n});\n_c = Image;\nexport default Image;\nvar _c;\n$RefreshReg$(_c, \"Image\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","Modal","Button","jsxDEV","_jsxDEV","Image","_s","file","setFile","prediction","setPrediction","imagePreview","setImagePreview","showModal","setShowModal","handleFileChange","event","selectedFile","target","files","reader","FileReader","onloadend","result","readAsDataURL","navigate","userValid","token","localStorage","getItem","console","log","handlePredict","formData","FormData","append","response","post","data","predictionResult","error","handleCloseModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","src","alt","style","maxWidth","maxHeight","onClick","show","onHide","centered","Header","Title","Body","Footer","variant","backgroundColor","color","border","borderRadius","padding","cursor","transition","_c","$RefreshReg$"],"sources":["C:/Users/taman/Desktop/Projects/AnemiaProject/client/src/pages/Image.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport \"../styles/forms.css\"\r\n\r\nconst Image = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [prediction, setPrediction] = useState(null);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n    setFile(selectedFile);\r\n\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      setImagePreview(reader.result);\r\n    };\r\n    reader.readAsDataURL(selectedFile);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const userValid = () => {\r\n    let token = localStorage.getItem(\"userdbtoken\");\r\n    if (token) {\r\n      console.log(\"user valid\")\r\n    } else {\r\n      navigate(\"*\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    userValid();\r\n  }, [])\r\n\r\n  const handlePredict = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('image', file);\r\n\r\n      const response = await axios.post('http://localhost:5000/dl_predict', formData);\r\n      setPrediction(response.data.predictionResult);\r\n      setShowModal(true);\r\n    } catch (error) {\r\n      console.error('Error predicting:', error);\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <div className='data'>\r\n        <div className='heading'>\r\n        <h2>Deep Learning </h2>\r\n        </div>\r\n      <div className='in'>\r\n        <label>\r\n          <input type=\"file\" onChange={handleFileChange} />\r\n        </label>\r\n        </div>\r\n      {imagePreview && (\r\n        <div>\r\n          <img src={imagePreview} alt=\"Preview\" style={{ maxWidth: '100%', maxHeight: '250px' }} />\r\n        </div>\r\n      )}\r\n      <button className='butn' onClick={handlePredict}>Predict</button>\r\n      {prediction && (\r\n        <Modal show={showModal} onHide={handleCloseModal} centered>\r\n          <Modal.Header>\r\n            <Modal.Title>Prediction Result</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>{prediction}</p>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleCloseModal} style={{ backgroundColor: '#e45a5a', color: '#fff', border: 'none', borderRadius: '5px', padding: '10px 20px', cursor: 'pointer', transition: 'background-color 0.3s' }}>\r\n              Close\r\n          </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}