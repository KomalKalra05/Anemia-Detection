{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\taman\\\\Desktop\\\\Projects\\\\AnemiaProject\\\\client\\\\src\\\\pages\\\\Otp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { userVerify } from \"../services/Apis\";\nimport otpimg from \"../images/otp.png\";\nimport '../styles/otp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Otp = () => {\n  _s();\n  const [otp, setOtp] = useState(['', '', '', '', '', '']);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const otpInputs = useRef([]);\n  const handleOtpChange = (index, value) => {\n    if (!isNaN(value) && value !== '') {\n      const newOtp = [...otp];\n      newOtp[index] = value;\n      setOtp(newOtp);\n      if (index < 5 && value !== '') {\n        otpInputs.current[index + 1].focus();\n      }\n    }\n  };\n  const handleOtpPaste = e => {\n    e.preventDefault();\n    const pasteData = e.clipboardData.getData('text/plain');\n    const pasteArray = pasteData.split('').slice(0, 6);\n    const newOtp = [...otp];\n    for (let i = 0; i < pasteArray.length; i++) {\n      newOtp[i] = pasteArray[i];\n    }\n    setOtp(newOtp);\n  };\n  const handleKeyPress = (e, index) => {\n    const regex = /^[0-9]$/;\n    if (!regex.test(e.key) && e.key !== 'Backspace') {\n      e.preventDefault();\n    }\n  };\n  const LoginUser = async e => {\n    e.preventDefault();\n    const enteredOtp = otp.join('');\n    if (enteredOtp === \"\") {\n      toast.error(\"Enter Your OTP\");\n    } else if (!/^[0-9]+$/.test(enteredOtp)) {\n      toast.error(\"Enter Valid OTP\");\n    } else if (enteredOtp.length !== 6) {\n      toast.error(\"OTP Length should be 6 digits\");\n    } else {\n      const data = {\n        otp: enteredOtp,\n        email: location.state\n      };\n      const response = await userVerify(data);\n      if (response.status === 200) {\n        localStorage.setItem(\"userdbtoken\", response.data.userToken);\n        toast.success(response.data.message);\n        setTimeout(() => {\n          navigate(\"/home\");\n        }, 5000);\n      } else {\n        toast.error(response.response.data.error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"otp-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"otp-heading\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Enter OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-image\",\n          children: /*#__PURE__*/_jsxDEV(\"figure\", {\n            className: \"fig\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: otpimg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"otp-container\",\n            children: otp.map((digit, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"otp\",\n              ref: ref => otpInputs.current[index] = ref,\n              type: \"text\",\n              maxLength: \"1\",\n              value: digit,\n              onChange: e => handleOtpChange(index, e.target.value),\n              onPaste: handleOtpPaste,\n              onKeyPress: e => handleKeyPress(e, index)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"otpbtn\",\n            onClick: LoginUser,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Otp, \"p88mzS39/aTkZ9Nuzns0o3WfOZg=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Otp;\nexport default Otp;\nvar _c;\n$RefreshReg$(_c, \"Otp\");","map":{"version":3,"names":["React","useState","useRef","ToastContainer","toast","useLocation","useNavigate","userVerify","otpimg","jsxDEV","_jsxDEV","Fragment","_Fragment","Otp","_s","otp","setOtp","location","navigate","otpInputs","handleOtpChange","index","value","isNaN","newOtp","current","focus","handleOtpPaste","e","preventDefault","pasteData","clipboardData","getData","pasteArray","split","slice","i","length","handleKeyPress","regex","test","key","LoginUser","enteredOtp","join","error","data","email","state","response","status","localStorage","setItem","userToken","success","message","setTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","map","digit","ref","type","maxLength","onChange","target","onPaste","onKeyPress","onClick","_c","$RefreshReg$"],"sources":["C:/Users/taman/Desktop/Projects/AnemiaProject/client/src/pages/Otp.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { userVerify } from \"../services/Apis\";\r\nimport otpimg from \"../images/otp.png\"\r\nimport '../styles/otp.css';\r\n\r\nconst Otp = () => {\r\n  const [otp, setOtp] = useState(['', '', '', '', '', '']);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const otpInputs = useRef([]);\r\n\r\n  const handleOtpChange = (index, value) => {\r\n    if (!isNaN(value) && value !== '') {\r\n      const newOtp = [...otp];\r\n      newOtp[index] = value;\r\n      setOtp(newOtp);\r\n\r\n      if (index < 5 && value !== '') {\r\n        otpInputs.current[index + 1].focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOtpPaste = (e) => {\r\n    e.preventDefault();\r\n    const pasteData = e.clipboardData.getData('text/plain');\r\n    const pasteArray = pasteData.split('').slice(0, 6);\r\n    const newOtp = [...otp];\r\n\r\n    for (let i = 0; i < pasteArray.length; i++) {\r\n      newOtp[i] = pasteArray[i];\r\n    }\r\n\r\n    setOtp(newOtp);\r\n  };\r\n\r\n  const handleKeyPress = (e, index) => {\r\n    const regex = /^[0-9]$/;\r\n    if (!regex.test(e.key) && e.key !== 'Backspace') {\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  const LoginUser = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const enteredOtp = otp.join('');\r\n\r\n    if (enteredOtp === \"\") {\r\n      toast.error(\"Enter Your OTP\");\r\n    } else if (!/^[0-9]+$/.test(enteredOtp)) {\r\n      toast.error(\"Enter Valid OTP\");\r\n    } else if (enteredOtp.length !== 6) {\r\n      toast.error(\"OTP Length should be 6 digits\");\r\n    } else {\r\n      const data = {\r\n        otp: enteredOtp,\r\n        email: location.state,\r\n      };\r\n\r\n      const response = await userVerify(data);\r\n      if (response.status === 200) {\r\n        localStorage.setItem(\"userdbtoken\", response.data.userToken);\r\n        toast.success(response.data.message);\r\n        setTimeout(() => {\r\n          navigate(\"/home\");\r\n        }, 5000);\r\n      } else {\r\n        toast.error(response.response.data.error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className=\"otp-data\">\r\n          <div className=\"otp-heading\">\r\n            <h2>Enter OTP</h2>\r\n          </div>\r\n          <div className=\"signup-image\">\r\n            <figure className=\"fig\">\r\n              <img src={otpimg}/>\r\n            </figure>\r\n            </div>\r\n          <form>\r\n            <div className=\"otp-container\">\r\n              {otp.map((digit, index) => (\r\n                <input className='otp'\r\n                  key={index}\r\n                  ref={(ref) => (otpInputs.current[index] = ref)}\r\n                  type=\"text\"\r\n                  maxLength=\"1\"\r\n                  value={digit}\r\n                  onChange={(e) => handleOtpChange(index, e.target.value)}\r\n                  onPaste={handleOtpPaste}\r\n                  onKeyPress={(e) => handleKeyPress(e, index)}\r\n                />\r\n              ))}\r\n            </div>\r\n            <button className='otpbtn' onClick={LoginUser}>Submit</button>\r\n          </form>\r\n        </div>\r\n        <ToastContainer />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Otp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}